generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ParkingLot {
  id     Int    @id @default(autoincrement())
  floor  String @db.VarChar(20)
  number String @db.VarChar(20)

  Reservation Reservation[]
  Traffic     Traffic[]
}

model Reservation {
  id           Int      @id @default(autoincrement())
  parkingLotId Int
  userId       Int
  checkInAt    DateTime
  checkOutAt   DateTime

  parkingLot ParkingLot @relation(fields: [parkingLotId], references: [id])
  User       User?      @relation(fields: [userId], references: [id])
  QRCodes    QRCodes[]
}

model User {
  id           Int     @id @default(autoincrement())
  firstName    String  @db.VarChar(50)
  lastName     String  @db.VarChar(50)
  NIM          String  @db.VarChar(50)
  licensePlate String  @db.VarChar(150)
  SIM          String  @db.VarChar(150)
  email        String  @unique @db.VarChar(150)
  password     String  @db.VarChar(150)
  // token        String?

  Report      Report[]
  Penalty     Penalty[]
  Reservation Reservation[]
}

model Report {
  id           Int    @id @default(autoincrement())
  userId       Int
  image        String @db.VarChar(150)
  description  String @db.VarChar(255)
  licensePlate String @db.VarChar(150)

  user User @relation(fields: [userId], references: [id])
}

model Penalty {
  id     Int    @id @default(autoincrement())
  userId Int
  description String @db.VarChar(150)

  user User @relation(fields: [userId], references: [id])
}

model QRCodes {
  id            Int    @id @default(autoincrement())
  reservationId Int
  QR_in         String @db.Text
  QR_out        String @db.Text

  Reservation Reservation @relation(fields: [reservationId], references: [id])
}

model Traffic {
  id           Int    @id @default(autoincrement())
  parkingLotId Int
  status       String @db.VarChar(20)

  ParkingLot ParkingLot @relation(fields: [parkingLotId], references: [id])
}
